plugins {
    id "java-library"
    id "jacoco"
    id "com.github.hierynomus.license" version "0.16.1"
    id "org.sonarqube" version "3.3"
    id "com.github.ben-manes.versions" version "0.39.0"
}

repositories {
    mavenCentral()
}

group 'com.github.kaklakariada'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addBooleanOption('html5', true)
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:all'
    options.encoding = 'UTF-8'
}

test {
    if(logger.infoEnabled) {
        testLogging.showStandardStreams = true
    }
    jvmArgs '-XX:+HeapDumpOnOutOfMemoryError', '-enableassertions'
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.32'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.5'
    implementation 'com.esotericsoftware:kryo:5.2.0'
    implementation 'org.apache.james:apache-mime4j-core:0.8.5'
    implementation 'org.apache.james:apache-mime4j-dom:0.8.5'
    implementation 'org.jsoup:jsoup:1.14.1'
    implementation 'org.influxdb:influxdb-java:2.21'
    implementation 'com.sun.mail:jakarta.mail:1.6.6'
    //implementation 'com.sun.mail:jakarta.mail:2.0.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.mockito:mockito-core:3.11.2'
}

license {
    header = file('gradle/license-header.txt')
    include "**/*.java"
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

rootProject.tasks["sonarqube"].dependsOn(tasks["jacocoTestReport"])

def isNonStable = { String version ->
  def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
  def regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
  gradleReleaseChannel = "current"
  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
  }
}
