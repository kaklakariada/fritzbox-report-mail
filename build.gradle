plugins {
    id "org.sonarqube" version "4.4.1.3373"
    id "com.github.ben-manes.versions" version "0.49.0"
}

group 'com.github.kaklakariada'
version = '0.0.1'


subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"

    group = rootProject.group
    version = rootProject.version

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    tasks.withType(JavaExec) {
        javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-Xlint:all'
    }

    testing {
        suites {
            test {
                useJUnitJupiter(libs.versions.junitJupiter.get())
            }
        }
    }

    test {
        if(logger.infoEnabled) {
            testLogging.showStandardStreams = true
        }
        jvmArgs '-XX:+HeapDumpOnOutOfMemoryError', '-enableassertions'
        systemProperty 'java.util.logging.config.file', file('src/test/resources/logging.properties')
    }

    jacocoTestReport {
        reports {
            xml.required = true
        }
    }

    rootProject.tasks["sonarqube"].dependsOn(tasks["jacocoTestReport"])
}

sonar {
  properties {
    property("sonar.organization", "kaklakariada-github")
    property("sonar.host.url", "https://sonarcloud.io")
  }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    gradleReleaseChannel = "current"
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
